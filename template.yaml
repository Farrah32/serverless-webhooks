AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  UsageEvents:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${AWS::StackName}-UsageEvents
      Subscription:
        - Endpoint: !GetAtt MailChimpTagQueue.Arn
          Protocol: sqs
    Condition: UsageEventsCreateNewResource
  MailChimpTagQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-MailChimpTagQueue
  UsageEventsToMailChimpTagQueuePermission:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: sns.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt MailChimpTagQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !If
                  - UsageEventsUseExistingResource
                  - !Ref UsageEventsExistingResource
                  - !Ref UsageEvents
      Queues:
        - !Ref MailChimpTagQueue
  MailChimpTagUser:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-MailChimpTagUser
      Description: !Sub
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: MailChimpTagUser
      CodeUri: src/handleWebhook
      Handler: index.githubWebhookHandler
      Runtime: nodejs10.x
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${EnvironmentTagName}/*
      Environment:
        Variables:
          GITHUB_WEBHOOK_SECRET: !Ref EnvConfiggithubSecretAsString
          SECRETS_NAMESPACE: !Sub /${EnvironmentTagName}/
      Events:
        MailChimpTagQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt MailChimpTagQueue.Arn
            BatchSize: 1
  UsageEventsExistingResource:
    Type: Custom::StackeryExistingResource
    Properties:
      ServiceToken: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:stackery-agent-commander
      Type: topic
      Data: !Ref EnvConfigUsageEventsTopicArnAsString
    Condition: UsageEventsUseExistingResource
Parameters:
  StackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  EnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  EnvConfiggithubSecretAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/githubSecret
  EnvConfigUsageEventsTopicArnAsString:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /<EnvironmentName>/UsageEventsTopicArn
Metadata:
  EnvConfigParameters:
    EnvConfiggithubSecretAsString: githubSecret
    EnvConfigUsageEventsTopicArnAsString: UsageEventsTopicArn
Conditions:
  UsageEventsCreateNewResource: !Equals
    - 'false'
    - !Ref EnvConfigUsageEventsTopicArnAsString
  UsageEventsUseExistingResource: !Not
    - Condition: UsageEventsCreateNewResource